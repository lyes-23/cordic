--
-- Generated by VASY
--
ENTITY cordic_serial_v IS
PORT(
  ck	: IN BIT;
  nreset	: IN BIT;
  nx_p	: IN BIT_VECTOR(7 DOWNTO 0);
  ny_p	: IN BIT_VECTOR(7 DOWNTO 0);
  rd_nxy_p	: IN BIT;
  wok_axy_p_serial	: OUT BIT;
  data_x	: OUT BIT;
  data_y	: OUT BIT;
  vdd	: IN BIT;
  vss	: IN BIT
);
END cordic_serial_v;

ARCHITECTURE VBE OF cordic_serial_v IS

  SIGNAL rtlsum_0	: BIT_VECTOR(2 DOWNTO 0);
  SIGNAL rtlcarry_0	: BIT_VECTOR(2 DOWNTO 0);
  SIGNAL rtldef_1	: BIT;
  SIGNAL rtldef_0	: BIT;
  SIGNAL n_send	: BIT;
  SIGNAL send	: REG_BIT REGISTER;
  SIGNAL comp	: BIT;
  SIGNAL n_wait0	: BIT;
  SIGNAL wait0	: REG_BIT REGISTER;
  SIGNAL counter	: REG_VECTOR(2 DOWNTO 0) REGISTER;
  SIGNAL n_counter	: BIT_VECTOR(2 DOWNTO 0);
  SIGNAL fsm_def_17	: BIT;
BEGIN

  rtlcarry_0(0) <= '0';
  rtlsum_0 <= ((counter XOR "001") XOR rtlcarry_0);
  rtlcarry_0(2 downto 1) <= (((counter(1 downto 0) AND "01") OR (counter(1 downto 0) AND rtlcarry_0(1 downto 0)
)) OR ("01" AND rtlcarry_0(1 downto 0)));
  data_y <= ny_p(7) WHEN (counter = "000") ELSE
     ny_p(6) WHEN (counter = "001") ELSE
     ny_p(5) WHEN (counter = "010") ELSE
     ny_p(4) WHEN (counter = "011") ELSE
     ny_p(3) WHEN (counter = "100") ELSE
     ny_p(2) WHEN (counter = "101") ELSE
     ny_p(1) WHEN (counter = "110") ELSE
     ny_p(0);
  data_x <= nx_p(7) WHEN (counter = "000") ELSE
     nx_p(6) WHEN (counter = "001") ELSE
     nx_p(5) WHEN (counter = "010") ELSE
     nx_p(4) WHEN (counter = "011") ELSE
     nx_p(3) WHEN (counter = "100") ELSE
     nx_p(2) WHEN (counter = "101") ELSE
     nx_p(1) WHEN (counter = "110") ELSE
     nx_p(0);
  comp <= '1' WHEN (counter = "111") ELSE
     '0';
  LABEL0 : BLOCK  ((ck = '1') AND NOT(ck'STABLE) )
  BEGIN
    counter <= GUARDED n_counter;
  END BLOCK LABEL0;
  n_counter <= "000" WHEN wait0 ELSE
     rtlsum_0 WHEN send ELSE
     counter;
  wok_axy_p_serial <= send;
  LABEL1 : BLOCK  ((ck = '1') AND NOT(ck'STABLE) )
  BEGIN
    send <= GUARDED (rtldef_1 AND n_send);
  END BLOCK LABEL1;
  LABEL2 : BLOCK  ((ck = '1') AND NOT(ck'STABLE) )
  BEGIN
    wait0 <= GUARDED ((rtldef_0 AND n_wait0) OR fsm_def_17);
  END BLOCK LABEL2;
  rtldef_1 <= '1' WHEN NOT(fsm_def_17) ELSE
     '0';
  rtldef_0 <= '1' WHEN NOT(fsm_def_17) ELSE
     '0';
  fsm_def_17 <= (nreset = '1');
  n_send <= ((send AND NOT(comp)) OR (wait0 AND rd_nxy_p));
  n_wait0 <= ((wait0 AND NOT(rd_nxy_p)) OR (send AND comp));
END VBE;
